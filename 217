/*217.存在重复元素*/
//方法一：先排序，再判断相邻元素是否相同
//先写cmp比较函数，在qsort里用
int cmp(const void*_a,const void*_b){
  int a=*(int*)_a,b=*(int*)_b;
  return a-b;
}
bool containsDuplicate(int* nums, int numsSize) {
  qsort(nums,numsSize,sizeof(int),cmp);
  for(int i=0;i<numsSize-1;i++){
    if(nums[i]==nums[i+1]){
      return true;
    }
  }
  return false;
}
//方法二：建立哈希表，调用c语言的UThash
struct hashTable{
  int Key;//键值
  UT_hash_handle hh;//make the structure hashable
};
bool containsDuplicate(int* nums, int numsSize) {
  struct hashTable* set=NULL;//初始化哈希表set，赋空指针
  for(int i=0;i<numsSize;i++){
    struct hashTable* tmp;
    HASH_FIND_INT(set,nums+i,tmp);//在哈希表里寻找nums+i存储的值，把这个结点的指针赋给tmp
    if(tmp==NULL){//若哈希表里没有，就放进去
      tmp = malloc(sizeof(struct hashTable));
      tmp->Key = nums[i];
      HASH_ADD_INT(set,key,tmp);
    }else{
      return true;
    }
  }
  return false;
}
